## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/asyncJPA
spring.datasource.username=postgres
spring.datasource.password=postgres
# Ustalenie dialektu dla hibernate na postgresowy. W domu zadzialalo bez tego, ale w pracy jest konieczne
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#drop none create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=none

#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true 	


#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
#spring.jpa.hibernate.naming.implicit-strategy=pl.biu.rofk.hb.BiuStructureNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.id.new_generator_mappings=true
spring.jpa.properties.hibernate.create_empty_composites.enabled=true
spring.jpa.properties.hibernate.jdbc.batch_size=100





#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%d{HH:mm:ss,SSS} %-5p [%c] - %m%n
# 
#log4j.rootLogger=info, stdout
## basic log level for all messages
#log4j.logger.org.hibernate=info
# 
## SQL statements and parameters
#log4j.logger.org.hibernate.SQL=debug
#log4j.logger.org.hibernate.type.descriptor.sql=trace


logging.level.org.hibernate.SQL=debug
#show sql values
#logging.level.org.hibernate.type.descriptor.sql=trace