# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
hibernate.temp.use_jdbc_metadata_defaults = false


# Czy i jak automatycznie zmianiać strukturę bazy danych
# none - nie wprowadzamy żadnych zmian i nie usuwamy danych
# create - dodaje i usuwa kolumny. Usuwa dane ze wszystkich (nawet tych baz zmian) tabel. Używa CREATE. 
# create-drop - jak crop, ale na zakończenie sesji usuwane są tabele, ale tylko te założone przez Hibernate w tej sesji
# update - Tylko dodaje kolumny. Używa ALTER.
# validate - Sprawdza czy struktury DB odpowiadają tym w Entity. DB może mieć coś więcej, ale nie mniej. 
hibernate.ddl-auto=create
generate-ddl=false 

# Konfiguracje uproszczone. Pozwalają na automatyczne obsługę kolejnych DB, ale 
# nie pozwalają na customizację ustawień Hibernate dla ich dataSource.

	# Sterownik bazy danych
	second.ds.driver-class-name=org.postgresql.Driver
	# Rodzaj bazy danych
	#second.spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
	# Baza danych
	second.ds.url=jdbc:postgresql://Ursus/ll/hibernate04_db2
	#spring.datasource.url=jdbc:postgresql://localhost:5432/ll/Hibernate05
	# Username
	second.ds.username=system
	# Password
	second.ds.password=system
	
# Wspólne ustawienia Hibernate dla baz opisanych first... i second...
	
	# Czy i jak automatycznie zmianiać strukturę bazy danych
	spring.jpa.hibernate.ddl-auto=create
	spring.jpa.generate-ddl=false
	 
	#  Logowanie SQL
	# -> "Logowanie w Springu" 
	spring.jpa.properties.hibernate.show_sql=true
	spring.jpa.properties.hibernate.use_sql_comments=true
	spring.jpa.properties.hibernate.format_sql=true
	spring.jpa.properties.hibernate.type=TRACE 